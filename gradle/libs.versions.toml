[versions]

# Gradle Plugins
androidGradlePlugin = "8.7.3"
kotlinGradlePlugin = "2.1.0"
composeGradlePlugin = "1.7.1"
detektGradlePlugin = "1.23.7"
ktlintGradlePlugin = "12.1.1"

# Kotlin
kotlinCompiler = "1.5.15"
kotlinCoroutines = "1.10.0"
kotlinSerializationJson = "1.7.3"

# Compose
composeNavigation = "2.8.0-alpha11"

# AndroidX
androidAnnotation = "1.9.1"
androidBrowser = "1.8.0"
androidSplashScreen = "1.0.1"
androidViewmodel = "2.8.4"
androidTestCore = "1.6.1"
androidTestRunner = "1.6.2"
androidTestExt = "1.2.1"

# SQLDelight
sqldelight = "2.0.2"

# Coil
coil = "3.0.4"

# Koin
koin = "4.0.0"

# Ktor
ktorClientCore = "3.0.3"

# Testing
junitJupiter = "5.11.4"
mockito = "5.14.2"
mockitoKotlin = "5.4.0"

# Detekt
detektRulesCompose = "0.4.22"


[libraries]

# Gradle Plugins
android-tools-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }

kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
kotlin-compose-gradlePlugin = { group = "org.jetbrains.compose", name = "org.jetbrains.compose.gradle.plugin", version.ref = "composeGradlePlugin" }

detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detektGradlePlugin" }
ktlint-gradlePlugin = { group = "org.jlleitschuh.gradle", name = "ktlint-gradle", version.ref = "ktlintGradlePlugin" }

# Detekt
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detektGradlePlugin" }
detekt-rules-compose = { group = "io.nlopez.compose.rules", name = "detekt", version.ref = "detektRulesCompose" }

# Compose
compose-navigation = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref = "composeNavigation" }

# AndroidX
android-annotation = { group = "androidx.annotation", name = "annotation", version.ref = "androidAnnotation" }
android-browser = { group = "androidx.browser", name = "browser", version.ref = "androidBrowser" }
android-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "androidSplashScreen" }
android-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidViewmodel" }

android-test-core = { group = "androidx.test", name = "core", version.ref = "androidTestCore" }
android-test-runner = { group = "androidx.test", name = "runner", version.ref = "androidTestRunner" }
android-test-ext = { group = "androidx.test.ext", name = "junit", version.ref = "androidTestExt" }

# SQLDelight
sqldelight-driver = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { group = "app.cash.sqldelight", name = "coroutines-extensions", version.ref = "sqldelight" }

# Coil
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network = { group = "io.coil-kt.coil3", name = "coil-network-okhttp", version.ref = "coil" }

# Koin
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-android-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref = "koin" }

# Ktor
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClientCore" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktorClientCore" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientCore" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientCore" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClientCore" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientCore" }

# Kotlin
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlinGradlePlugin" }
kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }
kotlin-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinSerializationJson" }

# Testing
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiter" }

mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockitoKotlin" }

[plugins]

# Android
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }

# Kotlin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinGradlePlugin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlinGradlePlugin" }

kotlin-compose = { id = "org.jetbrains.compose", version.ref = "composeGradlePlugin" }
kotlin-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinGradlePlugin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinGradlePlugin" }

# SQLDelight
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

# Static Analyzer
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektGradlePlugin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradlePlugin" }

# Plugins defined by this project
neilt-application-android = { id = "neilt.application.android" }
neilt-multiplatform-compose = { id = "neilt.multiplatform.compose" }
neilt-multiplatform = { id = "neilt.multiplatform" }
